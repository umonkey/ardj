# This is the main configuration file for ardj.
# If you have questions even after reading the comments, try reading
# the documentation at <http://umonkey.net/ardj/doc/>
#
# If something doesn't work, write to <hex@umonkey.net>.

# This is where you put the music and jingles that ardj should play.
musicdir: "{{CONFIG_DIR}}/music"


# This is the folder where files uploaded via Jabber should be stored.
# Should be within musicdir, otherwise files won't be visible until
# operator handles them.
incoming_path: "{{CONFIG_DIR}}/music/incoming"


# Specify how many recently played artists should be skipped when picking a
# random track.  For example, if this is set to 5, then 5 most recently played
# artists will be ignored.
#
# If ardj can't find new music to play, it will resort to playing a completely
# random track.  So, setting this value too high doesn't break the stream, but
# can effectively render some playlists empty, if they have less than specified
# artists.
dupes: 0


# Default labels for new files.
default_labels: [music, tagme]


# If you want to display a schedule of upcoming events on your web site,
# specify the name of the file where the information should be written to.  The
# file is updated when you run the 'ardj update-events' command, so you'll need
# to add that to your crontab, too.
#event_schedule_path: "{{CONFIG_DIR}}/public/upcoming-events.json"

# By default event schedule contains artists that have tracks with the "music"
# label.  You can set a different label here.
#event_schedule_label_filter: music

# By default event schedule contains artists which have tracks with weight 1.0
# or higher.  You can change this value here, to widen or narrow the range of
# announced artists.
#event_schedule_weight: 1.0


# If you want to track programs, name a file which will hold the current
# program name.  Program name is the name of a playlist which has the non-empty
# "program" property.  When a track is picked from such playlist, program name
# is updated.  You can use this to display things on your web site, for example.
#program_name_file: "{{CONFIG_DIR}}/public/current_ardj_program.txt"

# Uncomment this to announce program changes to the chat room.
#program_name_announce: true

# If you want to run a script when program changes, specify its name here.
#program_name_handler: "{{CONFIG_DIR}}/on-program-change"


# If you plan to use Jabber, uncomment this block and insert the correct values.
#jabber_id: "alice:secret@server.com"

# Here you can specify admin emails.  They have extra privileges when using
# jabber or the CLI console (ardj console).
jabber_admins:
- alice@example.com
- console

# Pomote most active users to admins.  You can define how many users from the
# top voters are promoted and how many days count.
#promote_voters: 10
#promote_voters_days: 14

# This adds track info to the bot's status message.
use_jabber_status: yes

# This enables sending XMPP Tunes (doesn't work with Gmail).
#use_jabber_tunes: yes

# If you want to add the bot to a chat room, specify his full jid there.
#
#jabber_chat_room: my_radio@conference.jabber.ru/MyBot


# If you want to be able to send twits using ardj (using the "twit" jabber
# command or "ardj twit" from the command line), you need to register yourself
# an application and get an access token.  This can be done on the
# dev.twitter.com/apps website.  Don't forget to set the read-write permission
# for your application, otherwise you'll only be able to read replies.
#twitter:
#  consumer_key: XXXXXXXXXXXXXXXXXXXXX
#  consumer_secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#  access_token_key: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#  access_token_secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


# If you want to see how many users are currently listening to the stream, enable this.
icecast_stats_url: "http://localhost:8000/status2.xsl"


# If you want to use speech synthesis, upload a random OGG/Vorbis track and
# specify its id here.  You can also specify a custom voice.
#festival_track_id: 1234
#festival_voice: voice_msu_ru_nsh_clunits


# Uncomment this to disable voting (e.g., for database maintenance).
#enable_voting: no

# This is where the messages will be logged.
log: "{{CONFIG_DIR}}/ardj.log"
log_level: debug
log_format_string: "ardj[%%(process)d]: %%(levelname)s %%(message)s"

# Comment out after the playlists are tuned and work well.
debug_playlist: yes


# This is the database where the runtime data is stored.
#
database_path: "{{CONFIG_DIR}}/ardj.sqlite"


# The socket that the database server listens to.  On a typical installation
# you would use a local server, so no need to change anythint.  However, if for
# some reason you wish to move the database server outside, you can specify a
# different location.
#webapi_socket: 127.0.0.1:8080


# The root folder of your WebAPI site.  That's where the static files are.
webapi_root: "{{CONFIG_DIR}}/../website"


# Here you can customize token verification emails, sent by WebAPI when
# a user requests access.
#TokenMailer_subject: "OMG! token"
#TokenMailer_plain: "Your token [{token}] is ready. Open <{link}> to activate it."
#TokenMailer_html: "<p>Your token [{token}] is ready. Open <{link}> to activate it.</p>"
