#!/usr/bin/env python
# vim: set fileencoding=utf-8:

import email.utils
import mutagen
import os
import sys
import time

MAX_FILE_AGE_DAYS = 7

RSS_CHANNEL = u'''<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<atom:link href="http://files.tmradio.net/live-dump/live.xml" rel="self" type="application/rss+xml"/>
<language>ru-RU</language>
<docs>http://blogs.law.harvard.edu/tech/rss</docs>
<generator>ardj</generator>
<title>Тоже мне радио: прямые эфиры</title>
<description>Все прямые эфиры tmradio</description>
<link>http://www.tmradio.net/mcast.html</link>
<pubDate>Thu, 03 Mar 2011 22:12:22 -0000</pubDate>
<lastBuildDate>Thu, 03 Mar 2011 22:12:22 -0000</lastBuildDate>
###ITEMS###</channel>
</rss>
'''

RSS_ITEM = u'''<item>
<title>Прямой эфир от %(date)s (%(duration)u мин.)</title>
<description>Запись произведена роботом и не обработана.</description>
<pubDate>%(rss_date)s</pubDate>
<guid>%(link)s</guid>
<enclosure url="%(link)s" type="audio/mpeg" length="%(length)u"/>
<author>info@tmradio.net (ardj)</author>
</item>
'''

def get_fqfn(filename):
    if os.path.dirname(filename) == '':
        dirname = os.path.dirname(settings.getpath('dump'))
        filename = os.path.join(dirname, filename)
    return filename

def get_air_time(filename):
    return time.strptime(get_fqfn(filename), settings.getpath('dump_rename_to'))

def get_air_duration(filename):
    tags = mutagen.File(filename)
    return int(tags.info.length / 60)

def purge(dirname):
    limit = time.time() - MAX_FILE_AGE_DAYS * 86400
    for filename in os.listdir(dirname):
        ctime = os.stat(os.path.join(dirname, filename)).st_ctime
        if ctime < limit:
            print 'Delete file:', filename #, limit, ctime
            os.unlink(filename)

def twit_file(filename):
    dur = get_air_duration(filename)
    if dur < settings.get('twit_duration_min', 10):
        return
    date = get_air_time(filename)
    twit = time.strftime(settings.get('twit_end').encode('utf-8')).decode('utf-8')
    twit = twit.replace('URL', settings.get('base_url') + os.path.basename(filename))
    twit = twit.replace('LENGTH', str(dur))

    if '-silent' not in sys.argv:
        from ardj import Open
        ardj = Open()
        ardj.twit(twit)

def update_rss(dirname):
    xml = u''
    for filename in sorted(os.listdir(dirname)):
        date = get_air_time(filename)
        dur = get_air_duration(filename)
        xml += RSS_ITEM % {
            'date': time.strftime('%d.%m.%Y, %H:%M', date),
            'duration': get_air_duration(filename),
            'link': settings.get('base_url', '') + filename,
            'length': os.stat(filename).st_size,
            'rss_date': email.utils.formatdate(time.mktime(date)),
        }

    xml = RSS_CHANNEL.replace('###ITEMS###', xml)
    open(settings.getpath('rss_name'), 'wb').write(xml.encode('utf-8'))

if __name__ == '__main__':
    if not os.path.abspath(sys.argv[0]).startswith('/usr'):
        src_dir = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]), '..'))
        sys.path.insert(0, src_dir)

    import ardj.settings
    settings = ardj.settings.load('stream')

    dirname = os.path.dirname(settings.getpath('dump'))
    purge(dirname)

    filename = os.path.join(dirname, sorted([x for x in os.listdir(dirname) if x.endswith('.mp3')])[-1])
    twit_file(filename)

    update_rss(dirname)
